	#	aop实现机制：
	#	javaproxy java动态代理模式
	#	cglib cglib模式
	 #
aop.proxy.type=cglib
aop.webservice.scope=mvc,application,default
sqlfile.refresh_interval=5000
#国际化属性文件变更检测时间间隔，单位为毫秒，默认为5秒间隔
resourcefile.refresh_interval=5000
approot=
#DESDBInfoEncrypt-采用des算法对数据库url，账号，密码进行加密和解密操作
#DBInfoEncryptclass=com.frameworkset.common.poolman.security.DESDBInfoEncrypt

#DESDBPasswordEncrypt-采用des算法对数据库密码进行加密和解密操作
DBInfoEncryptclass=com.frameworkset.common.poolman.security.DESDBPasswordEncrypt

#DESDBUserEncrypt-采用des算法对数据库用户名进行加密和解密操作
#DBInfoEncryptclass=com.frameworkset.common.poolman.security.DESDBUserEncrypt

#DESDBUrlEncrypt-采用des算法对数据库url进行加密和解密操作
#DBInfoEncryptclass=com.frameworkset.common.poolman.security.DESDBUrlEncrypt

#DESDBUserAndPasswordEncrypt-采用des算法对数据库用户名/口令进行加密和解密操作
#DBInfoEncryptclass=com.frameworkset.common.poolman.security.DESDBUserAndPasswordEncrypt

#对应的配置在bboss-aop.jar/aop.properties文件中，你只需要放开需要的加密插件，关闭另外的插件即可，数据库信息的加密请使用如下方法：
#						com.frameworkset.common.poolman.security.DESCipher aa = new com.frameworkset.common.poolman.security.DESCipher();
#						String password = aa.encrypt("123456");		
#						String user = aa.encrypt("root");		
#						String url = aa.encrypt("jdbc:mysql://localhost:3306/cim");

#表列明转换为规范的java属性名称，转换规则：aaa_bb_cc-->aaaBbCc
#true：启用转换，false：禁用转换，默认为false
column.nameMapping=true